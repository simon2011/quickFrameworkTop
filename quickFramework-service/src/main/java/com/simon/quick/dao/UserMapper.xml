<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simon.quick.dao.UserDao" >
  <resultMap id="BaseResultMap" type="com.simon.quick.facade.entity.User" >
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="user_status" property="userStatus" jdbcType="TINYINT" />
    <result column="avatar_file" property="avatarFile" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="birthday" property="birthday" jdbcType="INTEGER" />
    <result column="reg_time" property="regTime" jdbcType="INTEGER" />
    <result column="reg_ip" property="regIp" jdbcType="VARCHAR" />
    <result column="user_type" property="userType" jdbcType="INTEGER" />
    <result column="last_login" property="lastLogin" jdbcType="INTEGER" />
    <result column="last_ip" property="lastIp" jdbcType="VARCHAR" />
    <result column="online_time" property="onlineTime" jdbcType="INTEGER" />
    <result column="last_active" property="lastActive" jdbcType="INTEGER" />
    <result column="notification_unread" property="notificationUnread" jdbcType="INTEGER" />
    <result column="notice_unread" property="noticeUnread" jdbcType="INTEGER" />
    <result column="group_id" property="groupId" jdbcType="SMALLINT" />
    <result column="forbidden" property="forbidden" jdbcType="TINYINT" />
    <result column="admin_apply" property="adminApply" jdbcType="BIT" />
    <result column="salt" property="salt" jdbcType="CHAR" />
    <result column="st_flag" property="stFlag" jdbcType="INTEGER" />
    <result column="background" property="background" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    uid, user_name, email, mobile, telephone, real_name, password, user_status, avatar_file, 
    sex, birthday, reg_time, reg_ip, user_type, last_login, last_ip, online_time, last_active, 
    notification_unread, notice_unread, group_id, forbidden, admin_apply, salt, st_flag, 
    background
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from auth.user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.simon.quick.facade.entity.User" >
    insert into user (uid, user_name, email, 
      mobile, telephone, real_name, 
      password, user_status, avatar_file, 
      sex, birthday, reg_time, 
      reg_ip, user_type, last_login, 
      last_ip, online_time, last_active, 
      notification_unread, notice_unread, group_id, 
      forbidden, admin_apply, salt, 
      st_flag, background)
    values (#{uid,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{userStatus,jdbcType=TINYINT}, #{avatarFile,jdbcType=VARCHAR}, 
      #{sex,jdbcType=TINYINT}, #{birthday,jdbcType=INTEGER}, #{regTime,jdbcType=INTEGER}, 
      #{regIp,jdbcType=VARCHAR}, #{userType,jdbcType=INTEGER}, #{lastLogin,jdbcType=INTEGER}, 
      #{lastIp,jdbcType=VARCHAR}, #{onlineTime,jdbcType=INTEGER}, #{lastActive,jdbcType=INTEGER}, 
      #{notificationUnread,jdbcType=INTEGER}, #{noticeUnread,jdbcType=INTEGER}, #{groupId,jdbcType=SMALLINT}, 
      #{forbidden,jdbcType=TINYINT}, #{adminApply,jdbcType=BIT}, #{salt,jdbcType=CHAR}, 
      #{stFlag,jdbcType=INTEGER}, #{background,jdbcType=TINYINT})
  </insert>
  <insert id="insertBatch" parameterType="java.util.List" >
    insert into user (uid, 
      user_name, email, mobile, 
      telephone, real_name, password, 
      user_status, avatar_file, sex, 
      birthday, reg_time, reg_ip, 
      user_type, last_login, last_ip, 
      online_time, last_active, notification_unread, 
      notice_unread, group_id, forbidden, 
      admin_apply, salt, st_flag, 
      background)
    values 
 	<foreach collection="list" item="item" index="index" separator="," > 
 		( #{item.uid,jdbcType=INTEGER}, 
      #{item.userName,jdbcType=VARCHAR}, #{item.email,jdbcType=VARCHAR}, #{item.mobile,jdbcType=VARCHAR}, 
      #{item.telephone,jdbcType=VARCHAR}, #{item.realName,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR}, 
      #{item.userStatus,jdbcType=TINYINT}, #{item.avatarFile,jdbcType=VARCHAR}, #{item.sex,jdbcType=TINYINT}, 
      #{item.birthday,jdbcType=INTEGER}, #{item.regTime,jdbcType=INTEGER}, #{item.regIp,jdbcType=VARCHAR}, 
      #{item.userType,jdbcType=INTEGER}, #{item.lastLogin,jdbcType=INTEGER}, #{item.lastIp,jdbcType=VARCHAR}, 
      #{item.onlineTime,jdbcType=INTEGER}, #{item.lastActive,jdbcType=INTEGER}, #{item.notificationUnread,jdbcType=INTEGER}, 
      #{item.noticeUnread,jdbcType=INTEGER}, #{item.groupId,jdbcType=SMALLINT}, #{item.forbidden,jdbcType=TINYINT}, 
      #{item.adminApply,jdbcType=BIT}, #{item.salt,jdbcType=CHAR}, #{item.stFlag,jdbcType=INTEGER}, 
      #{item.background,jdbcType=TINYINT})
	</foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.simon.quick.facade.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="userStatus != null" >
        user_status,
      </if>
      <if test="avatarFile != null" >
        avatar_file,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="regTime != null" >
        reg_time,
      </if>
      <if test="regIp != null" >
        reg_ip,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
      <if test="lastLogin != null" >
        last_login,
      </if>
      <if test="lastIp != null" >
        last_ip,
      </if>
      <if test="onlineTime != null" >
        online_time,
      </if>
      <if test="lastActive != null" >
        last_active,
      </if>
      <if test="notificationUnread != null" >
        notification_unread,
      </if>
      <if test="noticeUnread != null" >
        notice_unread,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="forbidden != null" >
        forbidden,
      </if>
      <if test="adminApply != null" >
        admin_apply,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="stFlag != null" >
        st_flag,
      </if>
      <if test="background != null" >
        background,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null" >
        #{userStatus,jdbcType=TINYINT},
      </if>
      <if test="avatarFile != null" >
        #{avatarFile,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=INTEGER},
      </if>
      <if test="regTime != null" >
        #{regTime,jdbcType=INTEGER},
      </if>
      <if test="regIp != null" >
        #{regIp,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="lastLogin != null" >
        #{lastLogin,jdbcType=INTEGER},
      </if>
      <if test="lastIp != null" >
        #{lastIp,jdbcType=VARCHAR},
      </if>
      <if test="onlineTime != null" >
        #{onlineTime,jdbcType=INTEGER},
      </if>
      <if test="lastActive != null" >
        #{lastActive,jdbcType=INTEGER},
      </if>
      <if test="notificationUnread != null" >
        #{notificationUnread,jdbcType=INTEGER},
      </if>
      <if test="noticeUnread != null" >
        #{noticeUnread,jdbcType=INTEGER},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=SMALLINT},
      </if>
      <if test="forbidden != null" >
        #{forbidden,jdbcType=TINYINT},
      </if>
      <if test="adminApply != null" >
        #{adminApply,jdbcType=BIT},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=CHAR},
      </if>
      <if test="stFlag != null" >
        #{stFlag,jdbcType=INTEGER},
      </if>
      <if test="background != null" >
        #{background,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.simon.quick.facade.entity.User" >
    update user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null" >
        user_status = #{userStatus,jdbcType=TINYINT},
      </if>
      <if test="avatarFile != null" >
        avatar_file = #{avatarFile,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=INTEGER},
      </if>
      <if test="regTime != null" >
        reg_time = #{regTime,jdbcType=INTEGER},
      </if>
      <if test="regIp != null" >
        reg_ip = #{regIp,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="lastLogin != null" >
        last_login = #{lastLogin,jdbcType=INTEGER},
      </if>
      <if test="lastIp != null" >
        last_ip = #{lastIp,jdbcType=VARCHAR},
      </if>
      <if test="onlineTime != null" >
        online_time = #{onlineTime,jdbcType=INTEGER},
      </if>
      <if test="lastActive != null" >
        last_active = #{lastActive,jdbcType=INTEGER},
      </if>
      <if test="notificationUnread != null" >
        notification_unread = #{notificationUnread,jdbcType=INTEGER},
      </if>
      <if test="noticeUnread != null" >
        notice_unread = #{noticeUnread,jdbcType=INTEGER},
      </if>
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=SMALLINT},
      </if>
      <if test="forbidden != null" >
        forbidden = #{forbidden,jdbcType=TINYINT},
      </if>
      <if test="adminApply != null" >
        admin_apply = #{adminApply,jdbcType=BIT},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=CHAR},
      </if>
      <if test="stFlag != null" >
        st_flag = #{stFlag,jdbcType=INTEGER},
      </if>
      <if test="background != null" >
        background = #{background,jdbcType=TINYINT},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simon.quick.facade.entity.User" >
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      user_status = #{userStatus,jdbcType=TINYINT},
      avatar_file = #{avatarFile,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      birthday = #{birthday,jdbcType=INTEGER},
      reg_time = #{regTime,jdbcType=INTEGER},
      reg_ip = #{regIp,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=INTEGER},
      last_login = #{lastLogin,jdbcType=INTEGER},
      last_ip = #{lastIp,jdbcType=VARCHAR},
      online_time = #{onlineTime,jdbcType=INTEGER},
      last_active = #{lastActive,jdbcType=INTEGER},
      notification_unread = #{notificationUnread,jdbcType=INTEGER},
      notice_unread = #{noticeUnread,jdbcType=INTEGER},
      group_id = #{groupId,jdbcType=SMALLINT},
      forbidden = #{forbidden,jdbcType=TINYINT},
      admin_apply = #{adminApply,jdbcType=BIT},
      salt = #{salt,jdbcType=CHAR},
      st_flag = #{stFlag,jdbcType=INTEGER},
      background = #{background,jdbcType=TINYINT}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>